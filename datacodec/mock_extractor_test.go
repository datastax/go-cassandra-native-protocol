// Code generated by mockery v2.12.3. DO NOT EDIT.

package datacodec

import mock "github.com/stretchr/testify/mock"

// mockExtractor is an autogenerated mock type for the extractor type
type mockExtractor struct {
	mock.Mock
}

// getElem provides a mock function with given fields: index, key
func (_m *mockExtractor) getElem(index int, key interface{}) (interface{}, error) {
	ret := _m.Called(index, key)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(int, interface{}) interface{}); ok {
		r0 = rf(index, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, interface{}) error); ok {
		r1 = rf(index, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type newMockExtractorT interface {
	mock.TestingT
	Cleanup(func())
}

// newMockExtractor creates a new instance of mockExtractor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockExtractor(t newMockExtractorT) *mockExtractor {
	mock := &mockExtractor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
